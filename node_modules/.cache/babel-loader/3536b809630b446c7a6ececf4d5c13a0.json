{"ast":null,"code":"import _defineProperty from \"/home/olivier/Desktop/michelin-knowledge-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/olivier/Desktop/michelin-knowledge-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/olivier/Desktop/michelin-knowledge-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/olivier/Desktop/michelin-knowledge-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/olivier/Desktop/michelin-knowledge-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/olivier/Desktop/michelin-knowledge-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/olivier/Desktop/michelin-knowledge-front/src/Components/Register.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { registerUser } from '../actions/authentification';\nimport '../styles/css/Register.css';\nimport DisplayErrors from './DisplayErrors';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n\n    _this.handleInputChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var user = {\n        name: _this.state.name,\n        email: _this.state.email,\n        password: _this.state.password,\n        password_confirm: _this.state.password_confirm\n      };\n\n      _this.props.registerUser(user, _this.props.history); // console.log(user);\n\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/');\n      }\n\n      if (this.props.errors && this.props.errors !== prevProps.errors) {\n        this.setState({\n          errors: this.props.errors\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.errors);\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"container-register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form-register\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"m-none text-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Cr\\xE9er votre compte\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Nom\",\n        className: classnames('input-text', {\n          'is-invalid': errors.name\n        }),\n        autoComplete: \"username\",\n        name: \"name\",\n        onChange: this.handleInputChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        className: classnames('input-text', {\n          'is-invalid': errors.email\n        }),\n        autoComplete: \"email\",\n        name: \"email\",\n        onChange: this.handleInputChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        autoComplete: \"new-password\",\n        placeholder: \"mot de passe\",\n        className: classnames('input-text', {\n          'is-invalid': errors.password\n        }),\n        name: \"password\",\n        onChange: this.handleInputChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        autoComplete: \"new-password\",\n        placeholder: \"Confirmer votre password\",\n        className: classnames('input-text', {\n          'is-invalid': errors.password_confirm\n        }),\n        name: \"password_confirm\",\n        onChange: this.handleInputChange,\n        value: this.state.password_confirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-blue-rounded\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Enregistrer votre compte\"), React.createElement(\"div\", {\n        className: \"errors-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(DisplayErrors, {\n        errors: this.state.errors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/olivier/Desktop/michelin-knowledge-front/src/Components/Register.jsx"],"names":["React","Component","connect","PropTypes","withRouter","classnames","registerUser","DisplayErrors","Register","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","user","state","email","password","password_confirm","props","history","errors","prevProps","auth","isAuthenticated","push","console","log","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { registerUser } from '../actions/authentification';\nimport '../styles/css/Register.css';\nimport DisplayErrors from './DisplayErrors';\n\nclass Register extends Component {\n    constructor( ) {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password_confirm: '',\n            errors: {}\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const user =  {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password_confirm: this.state.password_confirm\n        }\n        this.props.registerUser(user, this.props.history);\n        // console.log(user);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(this.props.errors && this.props.errors !== prevProps.errors ) {\n            this.setState({\n                errors: this.props.errors\n            })\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n    }\n\n    render() {\n        console.log(this.state.errors)\n        const { errors } = this.state;\n        return (\n            <div className=\"container-register\">\n                <form className=\"form-register\" onSubmit={this.handleSubmit}>\n                    <h2 className=\"m-none text-blue\">Créer votre compte</h2>\n                        <input\n                        type='text'\n                        placeholder='Nom'\n                        className={classnames('input-text', {\n                            'is-invalid': errors.name\n                        })} \n                        autoComplete=\"username\"\n                        name='name'\n                        onChange={this.handleInputChange }\n                        value={this.state.name}\n                        />\n                        <input\n                        type='email'\n                        placeholder='Email'\n                        className={classnames('input-text', {\n                            'is-invalid': errors.email\n                        })} \n                        autoComplete=\"email\"\n                        name='email'\n                        onChange={this.handleInputChange }\n                        value={this.state.email}\n                        />\n                        <input\n                        type='password'\n                        autoComplete=\"new-password\"\n                        placeholder='mot de passe'\n                        className={classnames('input-text', {\n                            'is-invalid': errors.password\n                        })} \n                        name='password'\n                        onChange={this.handleInputChange }\n                        value={this.state.password}\n                        />\n                        <input\n                        type='password'\n                        autoComplete=\"new-password\"\n                        placeholder='Confirmer votre password'\n                        className={classnames('input-text', {\n                            'is-invalid': errors.password_confirm\n                        })} \n                        name='password_confirm'\n                        onChange={this.handleInputChange }\n                        value={this.state.password_confirm}\n                        />\n                        <button className=\"btn-blue-rounded\"type=\"submit\">Enregistrer votre compte</button>\n                        <div className=\"errors-container\">\n                            <DisplayErrors errors={this.state.errors} />\n                        </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser } ) (withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}